{"version":3,"sources":["components/Timeline/SeekerBar.tsx","components/Timeline/Timeline.tsx","components/Messages/TakoIcon.tsx","components/Messages/TakoMessages.tsx","components/TakoLoading/TakoLoading.tsx","components/Messages/MessageBoardSwitch.tsx","components/Messages/MessageBoardContainer.tsx","components/Main/HomeContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SeekerBar","milestones","curIndex","setIndex","length","nodeMapRef","useRef","map","createRef","NodeContainer","index","label","ref","current","active","passed","position","offsetLeft","Progress","BarContainer","ProgressBar","progress","styled","div","SeekerNode","React","forwardRef","props","StyledNode","onClick","Present","event","MilestoneDisplay","media","Future","setActive","MilestonePreview","preview","Past","TimelineContainer","Timeline","timelineRef","useState","cur","setCur","isFirst","isLast","trackScroll","e","yOffset","deltaY","scrollProgress","Math","max","min","floor","useEffect","throttledScroll","throttle","window","addEventListener","removeEventListener","TakoImg","img","TakoIcon","id","alt","src","process","SubmissionContainer","TextBubbleContainer","BubbleMessage","BubbleImage","BubbleHeader","HeaderText","TakoImgContainer","IFrame","iframe","TakoMessages","submissions","isToggledOnlyImg","isToggledTextOnly","useLayoutEffect","scrollTo","filter","sub","image","options","gutter","columnWidth","fitWidth","transitionDuration","style","margin","i","message","user","icon","includes","width","height","title","allow","allowFullScreen","TakoLoadingAnimation","TakoLoading","SwitchContainer","SwitchInput","input","SwitchLabel","SwitchButton","span","SwitchTextLabel","MessageBoardSwitch","toggled","onChange","className","type","checked","htmlFor","MessageBoard","FiltersContainer","Loader","SearchBar","LIMIT","MessageBoardContainer","csvData","setCSV","data","setData","offset","setOffset","hasMore","setHasMore","setIsToggledOnlyImg","setisToggledTextOnly","a","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","decode","value","csv","readString","header","rows","slice","fetchCSV","fetchMore","concat","handleFilter","target","resultData","row","toLowerCase","OnlyImgToggle","OnlyTextToggle","placeholder","overflow","scrollThreshold","dataLength","next","loader","LogoContainer","Logo","LogoHeader","h1","QuoteContainer","QuoteInaImg","Quote","LoreContainer","LoreTextContainer","InaVideo","video","InaVideoContainer","HomeContent","borderBottom","paddingBottom","marginTop","to","role","autoPlay","loop","poster","Footer","footer","Home","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAyBaA,EAAY,SAAC,GAIkB,IAAD,IAHzCC,EAGyC,EAHzCA,WACAC,EAEyC,EAFzCA,SACAC,EACyC,EADzCA,SAEA,IAAKF,EAAWG,OAAQ,OAAO,KAC/B,IAAMC,EAAaC,iBACjBL,EAAWM,KAAI,kBAAMC,0BAGvB,OACE,eAACC,EAAD,WACGR,EAAWM,KAAI,WAAYG,GAAZ,IAAGC,EAAH,EAAGA,MAAH,OACd,cAAC,EAAD,CAEEA,MAAOA,EACPC,IAAKP,EAAWQ,QAAQH,GACxBI,OAAQJ,IAAUR,EAClBa,OAAQL,EAAQR,EAChBC,SAAU,kBAAMA,EAASO,KALpBA,MAQT,cAAC,EAAD,CACEM,SAAQ,oBAAEX,EAAWQ,QAAQX,GAAUW,eAA/B,aAAE,EAAsCI,kBAAxC,QAAsD,QAMhEC,EAAW,SAAC,GAAwC,IAAtCF,EAAqC,EAArCA,SAClB,OACE,cAACG,EAAD,UACE,cAACC,EAAD,CAAaC,SAAUL,OAKvBG,EAAeG,IAAOC,IAAV,uIASZH,EAAcE,IAAOC,IAAV,+HACN,qBAAGF,YAMRG,EAAaC,IAAMC,YACvB,WAEEd,GACC,IAFCT,EAEF,EAFEA,SAAawB,EAEf,iBACA,OACE,cAACC,EAAD,2BAAgBD,GAAhB,IAAuBE,QAAS1B,EAAUS,IAAKA,QAO/CgB,EAAaN,IAAOC,IAAV,2MAGV,gBAAGT,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACAD,EAAS,UAAYC,EAAS,UAAY,aAS1CN,EAAgBa,IAAOC,IAAV,yN,QC/BnB,SAASO,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,MACjB,OACE,cAACC,GAAD,CAAkBC,MAAOF,EAAME,MAA/B,SACE,+BAAOF,EAAMpB,UAKnB,SAASuB,EAAT,GAMI,IALFD,EAKC,EALDA,MACAE,EAIC,EAJDA,UAKA,OAAO,cAACC,GAAD,CAAkBC,QAASJ,EAAOJ,QAASM,IAGpD,SAASG,EAAT,GAMI,IALFL,EAKC,EALDA,MACAE,EAIC,EAJDA,UAKA,OAAO,cAACC,GAAD,CAAkBC,QAASJ,EAAOJ,QAASM,IAGpD,I,yEAAMI,GAAoBjB,IAAOC,IAAV,kFAMjBS,GAAmBV,IAAOC,IAAV,0EACF,SAACI,GAAD,OAAWA,EAAMM,SAI/BG,GAAmBd,IAAOC,IAAV,wEACF,SAACI,GAAD,OAAWA,EAAMU,WAItBG,GA/GE,SAAC,GAA8D,IAA5DvC,EAA2D,EAA3DA,WAEZwC,EAAcnC,iBAAO,GAE3B,EAAsBoC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAkB,IAARF,EACVG,EAASH,IAAQ1C,EAAWG,OAAS,EAKrC2C,EAAc,SAACC,GACnB,IAAgBC,EAAYD,EAApBE,OACJC,EAAiBV,EAAY5B,QAEjCsC,GAAmBF,EAAU,IAPR,GAQrBE,EAAiBC,KAAKC,IAAI,EAAGF,GAC7BA,EAAiBC,KAAKE,IAAIH,EAA0C,KAAzBlD,EAAWG,OAAS,IAE3DgD,KAAKG,MAAMJ,EAAiB,OAASR,GAAQQ,GAC/CP,EAAOQ,KAAKG,MAAMJ,EAAiB,MAErCV,EAAY5B,QAAUsC,GAGlBhD,EAAW,SAACO,GAChB+B,EAAY5B,QAAkB,IAARH,EACtBkC,EAAOlC,IAaT,OAVA8C,qBAAU,WACR,IAAMC,EAAkBC,mBAASX,EAAa,IAI9C,OAFAY,OAAOC,iBAAiB,aAAcH,GAE/B,WACLE,OAAOE,oBAAoB,aAAcJ,MAE1C,IAGD,qCACE,eAAClB,GAAD,YACIM,GACA,cAACP,EAAD,CACEL,MAAOhC,EAAW0C,EAAM,GAAGV,MAC3BE,UAAW,kBAAMhC,EAASwC,EAAM,MAGpC,cAACb,EAAD,CAASC,MAAO9B,EAAW0C,MACzBG,GACA,cAACZ,EAAD,CACED,MAAOhC,EAAW0C,EAAM,GAAGV,MAC3BE,UAAW,kBAAMhC,EAASwC,EAAM,SAItC,cAAC,EAAD,CACE1C,WAAYA,EACZC,SAAUyC,EACVxC,SAAUA,EACVkB,SAAUoB,EAAY5B,c,2DChExBiD,GAAUxC,IAAOyC,IAAV,+GAWAC,GAAW,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAEvB,OAEQ,cAACH,GAAD,CACII,IAAG,oBAAeD,GAClBE,IAAG,UAAKC,4BAAL,kBAAqCH,EAArC,WCdbI,GAAsB/C,IAAOC,IAAV,6KAUnB+C,GAAsBhD,IAAOC,IAAV,iTA4BnBgD,GAAgBjD,IAAOC,IAAV,mOAUbiD,GAAclD,IAAOyC,IAAV,kOAUXU,GAAenD,IAAOC,IAAV,mXAkBZmD,GAAapD,IAAOC,IAAV,8DAKVoD,GAAmBrD,IAAOC,IAAV,gDAIhBqD,GAAStD,IAAOuD,OAAV,oIA2EGC,GA9DM,SAAC,GAA0F,IAAxFC,EAAuF,EAAvFA,YAAaC,EAA0E,EAA1EA,iBAAkBC,EAAwD,EAAxDA,kBAcnD,OAXAC,2BAAgB,WACZvB,OAAOwB,SAAS,EAAG,KACrB,IAEEH,IACAD,EAAcA,EAAYK,QAAO,SAACC,GAC9B,OAAOA,EAAIC,UAMf,cAAC,KAAD,CACIC,QAAS,CACLC,OAAQ,GACRC,YAAa,EACbC,UAAU,EACVC,mBAAoB,GAExBC,MAAO,CAAEC,OAAQ,UAPrB,SAUQd,EAAYxE,KAAI,WAAiCuF,GAAjC,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAMX,EAAxB,EAAwBA,MAAxB,OACZ,cAACjB,GAAD,UACI,eAACC,GAAD,WACI,eAACG,GAAD,WACI,cAACE,GAAD,UACI,cAAC,GAAD,CAAUV,GAAIgC,MAElB,eAACvB,GAAD,WACS,IAARsB,EAAaA,EAAO,iBADrB,UAIJ,wBAEEf,GAAqBK,IAGlBA,EAAMY,SAAS,WAEd,cAACtB,GAAD,CAAQuB,MAAM,OAAOC,OAAO,MAAMjC,IAAKmB,EAAOe,MAAM,uBAAwBC,MAAM,2FAA4FC,iBAAiB,IAD/L,cAAC/B,GAAD,CAAaL,IAAI,oFAOrBa,GACE,cAACT,GAAD,UAAgBwB,QAxBFD,S,UC/HxCU,GAAuBlF,IAAOyC,IAAV,+CAIb0C,GAAc,WAEvB,OAEQ,cAACD,GAAD,CACItC,IAAG,mBACHC,IAAG,UAAKC,4BAAL,6BCTbsC,GAAkBpF,IAAOC,IAAV,uGAMfoF,GAAcrF,IAAOsF,MAAV,8EAMXC,GAAcvF,IAAOX,MAAV,+QAaXmG,GAAexF,IAAOyF,KAAV,0XAWdJ,GAAyBE,GAKzBA,IAKEG,GAAkB1F,IAAOC,IAAV,0MAwCN0F,GAvBY,SAAC,GAAgE,IAA9DhD,EAA6D,EAA7DA,GAAItD,EAAyD,EAAzDA,MAAOuG,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,SAGhD,OACE,eAACT,GAAD,WACE,cAACC,GAAD,CACES,UAAU,kBACVnD,GAAIA,EACJoD,KAAK,WACLC,QAASJ,EACTC,SAAUA,IAEZ,cAACN,GAAD,CAAaO,UAAU,eAAeG,QAAStD,EAA/C,SACE,cAAC6C,GAAD,CAAcM,UAAU,oBAE1B,cAACJ,GAAD,UACGrG,QCtEH6G,GAAelG,IAAOC,IAAV,+FAMZkG,GAAmBnG,IAAOC,IAAV,yEAKhBmG,GAASpG,IAAOC,IAAV,mHAONoG,GAAYrG,IAAOsF,MAAV,8bAuBTgB,GAAQ,GAmICC,GAjIe,WAC1B,MAA0BnF,mBAAS,IAAnC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAAwBrF,mBAAS,IAAjC,mBAAOsF,EAAP,KAAaC,EAAb,KACA,EAA4BvF,mBAAS,GAArC,mBAAOwF,EAAP,KAAeC,EAAf,KACA,EAA8BzF,oBAAS,GAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACA,EAAgD3F,oBAAS,GAAzD,mBAAOsC,EAAP,KAAyBsD,EAAzB,KACA,EAAkD5F,oBAAS,GAA3D,mBAAOuC,EAAP,KAA0BsD,EAA1B,KAEA/E,qBAAU,YACQ,yCAAG,2CAAAgF,EAAA,sEACUC,MAAM,GAAD,OAAIrE,4BAAJ,sBADf,cACPsE,EADO,OAEPC,EAASD,EAAUE,KAAMC,YAFlB,SAGQF,EAAOG,OAHf,cAGPC,EAHO,OAIPC,EAAU,IAAIC,YAAY,SAJnB,UAKKD,EAAQE,OAAOH,EAAOI,OAL3B,QAKPC,EALO,SAMaC,aAAWD,EAAK,CAAEE,QAAQ,IAAtCxB,EAND,EAMLE,KACRD,EAAOD,GAEDyB,EAAOzB,EAAQ0B,MAAMtB,EAAQN,IAKnCK,EAAQsB,GACRpB,EAAUP,GAAQM,GAfL,4CAAH,qDAiBduB,KACD,IAEH,IAAMC,EAAS,yCAAG,6BAAAlB,EAAA,sDACM,IAAhBR,EAAK5H,SAEe,KADdmJ,EAAOzB,EAAQ0B,MAAMtB,EAAQN,GAAQM,IAClC9H,QACLiI,GAAW,GAKfJ,EAAQD,EAAK2B,OAAOJ,IACpBpB,EAAUP,GAAQM,IAVR,2CAAH,qDAcT0B,EAAY,yCAAG,WAAO7H,GAAP,kBAAAyG,EAAA,sDACS,IAAtBzG,EAAM8H,OAAOV,OACPW,EAAahC,EAAQ1C,QAAO,SAAC2E,GAC/B,OAAOA,EAAI/D,KAAKgE,cAAc9D,SAASnE,EAAM8H,OAAOV,MAAMa,gBACtDD,EAAIhE,QAAQiE,cAAc9D,SAASnE,EAAM8H,OAAOV,MAAMa,kBAE9D3B,GAAW,GACXJ,EAAS6B,GACT3B,EAAU,KAEJoB,EAAOzB,EAAQ0B,MAAMtB,EAAQN,IACnCS,GAAW,GACXJ,EAAQsB,GACRpB,EAAUD,EAASN,KAbN,2CAAH,sDAiBZqC,EAAa,yCAAG,WAAOlI,GAAP,UAAAyG,EAAA,sDACdzG,EAAM8H,OAAOvC,SACbgB,GAAoB,GACpBC,GAAqB,IAErBD,GAAoB,GALN,2CAAH,sDASb4B,EAAc,yCAAG,WAAOnI,GAAP,UAAAyG,EAAA,sDACfzG,EAAM8H,OAAOvC,SACbiB,GAAqB,GACrBD,GAAoB,IAEpBC,GAAqB,GALN,2CAAH,sDAUpB,OACI,eAACf,GAAD,WACI,eAACC,GAAD,WACI,cAACE,GAAD,CACIR,SAAUyC,EACVO,YAAY,cAGhB,cAAC,GAAD,CACIlG,GAAG,eACHtD,MAAO,cACPuG,QAASlC,EACTmC,SAAU8C,IAEd,cAAC,GAAD,CACIhG,GAAG,cACHtD,MAAO,gBACPuG,QAASjC,EACTkC,SAAU+C,OAGlB,cAAC,KAAD,CACItE,MAAO,CAAEwE,SAAU,UACnBC,gBAAiB,MACjBC,WAAYtC,EAAK5H,OACjBmK,KAAMb,EACNtB,QAASA,EACToC,OACI,cAAC9C,GAAD,UACI,cAAC,GAAD,MARZ,SAYI,cAAC,GAAD,CACI3C,YAAaiD,EACbhD,iBAAkBA,EAClBC,kBAAmBA,UCrKjCwF,GAAgBnJ,IAAOC,IAAV,uNAKbmJ,GAAOpJ,IAAOyC,IAAV,iHAaJ4G,IANUrJ,IAAOC,IAAV,0EAMMD,IAAOsJ,GAAV,uQAWVC,GAAiBvJ,IAAOC,IAAV,mKAKduJ,GAAcxJ,IAAOyC,IAAV,+GAMXgH,GAAQzJ,IAAOC,IAAV,4MASLyJ,GAAgB1J,IAAOC,IAAV,6DAKb0J,GAAoB3J,IAAOC,IAAV,q6BAwCjB2J,GAAW5J,IAAO6J,MAAV,0FAMRC,GAAoB9J,IAAOC,IAAV,iFAgFR8J,GA3EK,WAOhB,OACI,gCACI,eAACZ,GAAD,WACI,cAACC,GAAD,CACIxG,IAAI,WACJC,IAAG,UAAKC,4BAAL,kBAGP,cAACuG,GAAD,yCAEJ,eAACE,GAAD,WACI,cAACC,GAAD,CACI3G,IAAG,UAAKC,4BAAL,oBAEP,eAAC2G,GAAD,WACI,qBACI7G,IAAI,MACJC,IAAG,UAAKC,4BAAL,YACHwB,MACI,CACI0F,aAAc,YACdC,cAAe,OACfpF,MAAO,WAInB,uBAZJ,kBAcI,uBAdJ,mBAkBJ,eAAC6E,GAAD,WACI,eAACC,GAAD,WACI,sBAAK7D,UAAU,YAAf,UACI,+SAKA,uNAKJ,sBAAKxB,MAAO,CAAC4F,UAAW,QAAxB,UACI,cAAC,IAAD,CAAMC,GAAG,YAAYC,KAAK,SAAStE,UAAU,aAA7C,sBAGA,cAAC,IAAD,CAAMqE,GAAG,YAAYC,KAAK,SAAStE,UAAU,aAA7C,4BAMR,cAACgE,GAAD,UACI,cAACF,GAAD,CAAUS,UAAQ,EAACC,MAAI,EAACC,OAAM,UAAKzH,4BAAL,6BCrK5C0H,GAASxK,IAAOyK,OAAV,2JAiDNC,GAAO,kBACX,8BACE,cAAC,GAAD,OAUE/L,GAA0B,CAC9B,CACEU,MAAO,QACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,8CAIIgK,GA9EH,kBACV,eAAC,IAAD,WACE,qBAAK7E,UAAU,MAAf,SASE,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,CAAUlM,WAAYA,cAK9B,cAAC6L,GAAD,UACE,qBACE5H,IAAI,WACJkD,UAAU,aACVjD,IAAG,UAAKC,4BAAL,wBCtCIgI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.6a7aeea8.chunk.js","sourcesContent":["import React, {\n  createRef,\n  ForwardedRef,\n  MutableRefObject,\n  RefObject,\n  useRef,\n} from \"react\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\ninterface INodeProps {\n  active: boolean;\n  passed: boolean;\n  label: string;\n  ref: MutableRefObject<HTMLInputElement>;\n  setIndex: () => void;\n}\n\ninterface ISeekerBarProps {\n  milestones: Milestone[];\n  curIndex: number;\n  setIndex: (index: number) => void;\n  progress: number;\n}\n\nexport const SeekerBar = ({\n  milestones,\n  curIndex,\n  setIndex,\n}: ISeekerBarProps): JSX.Element | null => {\n  if (!milestones.length) return null;\n  const nodeMapRef = useRef<RefObject<HTMLInputElement>[]>(\n    milestones.map(() => createRef())\n  );\n\n  return (\n    <NodeContainer>\n      {milestones.map(({ label }, index) => (\n        <SeekerNode\n          key={index}\n          label={label}\n          ref={nodeMapRef.current[index]}\n          active={index === curIndex}\n          passed={index < curIndex}\n          setIndex={() => setIndex(index)}\n        />\n      ))}\n      <Progress\n        position={nodeMapRef.current[curIndex].current?.offsetLeft ?? 0}\n      />\n    </NodeContainer>\n  );\n};\n\nconst Progress = ({ position }: { position: number }) => {\n  return (\n    <BarContainer>\n      <ProgressBar progress={position} />\n    </BarContainer>\n  );\n};\n\nconst BarContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  position: absolute;\n  z-index: 0;\n  top: 45%;\n  margin-left: 0.25em;\n`;\n\nconst ProgressBar = styled.div<{ progress: number }>`\n  width: ${({ progress }) => progress}px;\n  transition: width 0.25s linear;\n  background-color: #f29a31;\n  height: 100%;\n`;\n\nconst SeekerNode = React.forwardRef<HTMLInputElement, INodeProps>(\n  function SeekerNode(\n    { setIndex, ...props }: INodeProps,\n    ref: ForwardedRef<HTMLInputElement>\n  ) {\n    return (\n      <StyledNode {...props} onClick={setIndex} ref={ref}>\n        {/*<span>{label}</span>*/}\n      </StyledNode>\n    );\n  }\n);\n\nconst StyledNode = styled.div<{ active: boolean; passed: boolean }>`\n  background: #fff;\n  border: 0.35rem solid\n    ${({ active, passed }) =>\n      active ? \"#F29A31\" : passed ? \"#E1D9EF\" : \"#564F68\"};\n  border-radius: 50%;\n  margin: 1rem 0;\n  min-width: 0.7rem;\n  min-height: 0.7rem;\n  padding: 5px;\n  z-index: 2;\n`;\n\nconst NodeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //position: relative;\n  background: #666666;\n  padding: 0 1em;\n  position: relative;\n  overflow: hidden;\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { SeekerBar } from \"./SeekerBar\";\nimport {throttle } from \"lodash\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\nconst Timeline = ({ milestones }: { milestones: Milestone[] }): JSX.Element => {\n  // const { events } = props;\n  const timelineRef = useRef(0);\n\n  const [cur, setCur] = useState(0);\n  const isFirst = cur === 0;\n  const isLast = cur === milestones.length - 1;\n\n  const scrollStrength = 20;\n  //Seeker progress for the milestones\n\n  const trackScroll = (e: any) => {\n    const { deltaY: yOffset } = e;\n    let scrollProgress = timelineRef.current;\n\n    scrollProgress += (yOffset / 100) * scrollStrength;\n    scrollProgress = Math.max(0, scrollProgress);\n    scrollProgress = Math.min(scrollProgress, (milestones.length - 1) * 100);\n\n    if (Math.floor(scrollProgress / 100) !== cur || !scrollProgress)\n      setCur(Math.floor(scrollProgress / 100));\n\n    timelineRef.current = scrollProgress;\n  };\n\n  const setIndex = (index: number) => {\n    timelineRef.current = index * 100;\n    setCur(index);\n  };\n\n  useEffect(() => {\n    const throttledScroll = throttle(trackScroll, 50);\n\n    window.addEventListener(\"mousewheel\", throttledScroll);\n\n    return () => {\n      window.removeEventListener(\"mousewheel\", throttledScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      <TimelineContainer>\n        {!isFirst && (\n          <Past\n            media={milestones[cur - 1].media}\n            setActive={() => setIndex(cur - 1)}\n          />\n        )}\n        <Present event={milestones[cur]} />\n        {!isLast && (\n          <Future\n            media={milestones[cur + 1].media}\n            setActive={() => setIndex(cur + 1)}\n          />\n        )}\n      </TimelineContainer>\n      <SeekerBar\n        milestones={milestones}\n        curIndex={cur}\n        setIndex={setIndex}\n        progress={timelineRef.current}\n      />\n    </>\n  );\n};\n\nfunction Present({ event }: { event: Milestone }) {\n  return (\n    <MilestoneDisplay media={event.media}>\n      <span>{event.label}</span>\n    </MilestoneDisplay>\n  );\n}\n\nfunction Future({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nfunction Past({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nconst TimelineContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n`;\n\nconst MilestoneDisplay = styled.div<{ media: Milestone[\"media\"] }>`\n  background: url(${(props) => props.media}) center;\n\n  flex: 5;\n`;\nconst MilestonePreview = styled.div<{ preview: Milestone[\"media\"] }>`\n  background: url(${(props) => props.preview}) center;\n  flex: 1;\n`;\n\nexport default Timeline;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TakoImg = styled.img`\n    width: 80px;\n    filter: drop-shadow(2px 2px 1px darkgray);\n    opacity: 1;\n`;\n\n\ninterface TakoIconProps {\n    id: number\n}\n\nexport const TakoIcon = ({ id }: TakoIconProps): JSX.Element => {\n\n    return (\n        \n            <TakoImg\n                alt={`tako-icon-${id}`}\n                src={`${process.env.PUBLIC_URL}/icon/W${id}.png`}\n            />\n        \n    )\n};","import React, { useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Submission } from \"./Submission\";\nimport Masonry from \"react-masonry-component\";\nimport { TakoIcon } from \"./TakoIcon\";\n\nconst SubmissionContainer = styled.div`\n    margin :10px;\n    width: 450px;\n    @media only screen and (max-width: 768px) {\n        margin-left: 0px;\n        width: 100%;\n    }\n\n`;\n\nconst TextBubbleContainer = styled.div`\n  position: relative;\n  font-family: sans-serif;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 15px;\n  border: 3px solid var(--inai-purple);\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  border: 3px solid #A198B3;\n  border-radius: 15px;\n  opacity: 1;\n  \n`;\n\n// const TextBubbleBottom = styled.div`\n//     content: \"\";\n//     width: 0px;\n//     height: 0px;\n//     position: absolute;\n//     border-left: 24px solid #fff;\n//     border-right: 12px solid transparent;\n//     border-top: 12px solid #fff;\n//     border-bottom: 20px solid transparent;\n//     left: 50%;\n//     bottom: -17px;\n//     // border-color: purple;\n// `;\n\nconst BubbleMessage = styled.div`\n    padding-top: 5px;\n    overflow-wrap: break-word;\n    color: var(--ika-purple);\n    text-align: left;\n    font: normal normal 300 20px/25px Mulish;\n    letter-spacing: 0px;\n    opacity: 1;\n`;\n\nconst BubbleImage = styled.img`\n    border: 2px solid var(--inai-purple);\n    border: 2px solid #A198B3;\n    border-radius: 23px;\n    opacity: 1;  \n    @media only screen and (max-width: 768px) {\n        width: 100%;\n    }\n`;\n\nconst BubbleHeader = styled.div`\n    color: var(--ina-orange);\n    text-align: left;\n\n    \n    font: normal normal 600 37px/45px Montserrat;\n\n    @media only screen and (max-width: 768px) {\n        font: normal normal 600 24px/30px Montserrat;    \n    }\n    \n    letter-spacing: 0px;\n    opacity: 1;\n    display: flex;\n    width: 100%;\n    align-items: center;\n`;\n\nconst HeaderText = styled.div`\n    overflow-wrap: break-word;\n\n`;\n\nconst TakoImgContainer = styled.div`\n    display: flex;\n`;\n\nconst IFrame = styled.iframe`\nborder: 2px solid var(--inai-purple);\nborder: 2px solid #A198B3;\nborder-radius: 23px;\nopacity: 1;  \n`;\n\ninterface TakoMessagesProps {\n    submissions: Submission[];\n    isToggledOnlyImg: boolean;\n    isToggledTextOnly: boolean;\n}\n\nconst TakoMessages = ({ submissions, isToggledOnlyImg, isToggledTextOnly }: TakoMessagesProps): JSX.Element => {\n\n\n    useLayoutEffect(() => {\n        window.scrollTo(0, 0)\n    },[]);\n\n    if (isToggledOnlyImg) {\n        submissions = submissions.filter((sub) => {\n            return sub.image;\n        })\n    }\n\n\n    return (\n        <Masonry\n            options={{\n                gutter: 40,\n                columnWidth: 1,\n                fitWidth: true,\n                transitionDuration: 0,\n            }}\n            style={{ margin: \"0 auto\" }}\n        >\n            {\n                submissions.map(({ message, user, icon, image }, i) => (\n                    <SubmissionContainer key={i}>\n                        <TextBubbleContainer>\n                            <BubbleHeader>\n                                <TakoImgContainer>\n                                    <TakoIcon id={icon} />\n                                </TakoImgContainer>\n                                <HeaderText>\n                                {user != '' ? user : 'Anonymous Tako'}:\n                                </HeaderText>\n                            </BubbleHeader>\n                            <hr/>\n                            \n                            {!isToggledTextOnly && image && (\n                                //Using ina pfp as placeholder.\n\n                                !image.includes(\"youtube\")  \n                                ? <BubbleImage src=\"https://pbs.twimg.com/profile_images/1339283318848716801/_zU72OLZ_400x400.jpg\" />\n                                : <IFrame width=\"100%\" height=\"315\" src={image} title=\"YouTube video player\"  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"  allowFullScreen={true}></IFrame> \n                                \n                                \n\n\n                            )}\n                            {!isToggledOnlyImg && (\n                                <BubbleMessage>{message}</BubbleMessage>\n                            )}\n                            {/* <TextBubbleBottom/> */}\n                        </TextBubbleContainer>\n                    </SubmissionContainer>\n                ))\n            }\n        </Masonry>\n    );\n\n};\n\nexport default TakoMessages;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TakoLoadingAnimation = styled.img`\n    width: 150px;\n`;\n\nexport const TakoLoading = (): JSX.Element => {\n\n    return (\n        \n            <TakoLoadingAnimation\n                alt={`tako-loading-gif`}\n                src={`${process.env.PUBLIC_URL}/takoJiggleProject.gif`}\n            />\n        \n    )\n};","import React, { ChangeEventHandler } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst SwitchContainer = styled.div`\n    display: inline-box;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nconst SwitchInput = styled.input`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n`;\n\nconst SwitchLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 50px;\n  height: 30px;\n  border-radius: 100px;\n  border: 2px solid gray;\n  position: relative;\n  transition: background-color 0.2s;\n`;\n\nconst SwitchButton = styled.span`\n  content: \"\";\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 25px;\n  height: 26px;\n  border-radius: 45px;\n  transition: 0.2s;\n  background: grey;\n  box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n  ${SwitchInput}:checked + ${SwitchLabel} & {\n    left: calc(100% - 2px);\n    transform: translateX(-100%);\n  }\n\n  ${SwitchLabel}:active & {\n    width: 45px;\n  }\n`;\n\nconst SwitchTextLabel = styled.div`\n  color: var(--ika-purple);\n  font: normal normal 300 25px/30px Montserrat;\n  letter-spacing: 0px;\n  color: #564F68;\n  opacity: 1;\n  margin: auto;\n  margin-left: 5px;\n`;\n\ninterface SwitchProps {\n  id: string;\n  label: string;\n  toggled: boolean;\n  onChange: ChangeEventHandler;\n}\n\nconst MessageBoardSwitch = ({ id, label, toggled, onChange }: SwitchProps): JSX.Element => {\n\n\n  return (\n    <SwitchContainer>\n      <SwitchInput\n        className=\"switch-checkbox\"\n        id={id}\n        type=\"checkbox\"\n        checked={toggled}\n        onChange={onChange}\n      />\n      <SwitchLabel className=\"switch-label\" htmlFor={id}>\n        <SwitchButton className=\"switch-button\" />\n      </SwitchLabel>\n      <SwitchTextLabel>\n        {label}\n      </SwitchTextLabel>\n    </SwitchContainer>\n\n  );\n};\n\nexport default MessageBoardSwitch;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { readString } from \"react-papaparse\";\n\nimport TakoMessages from \"./TakoMessages\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { TakoLoading } from \"../TakoLoading/TakoLoading\";\nimport MessageBoardSwitch from \"./MessageBoardSwitch\";\nimport { Submission } from \"./Submission\";\n// import MessageBoard from \"./MessageBoard\";\n\n\nconst MessageBoard = styled.div` \n    width: 90%;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nconst FiltersContainer = styled.div`\n    margin: auto;\n    margin-bottom: 35px;\n`;\n\nconst Loader = styled.div`\n    display: flex !important;\n    justify-content: center;\n    align-items: center;\n`;\n\n\nconst SearchBar = styled.input`\n    display: block;    \n    width: 100%;\n    background-color: transparent;\n    border: 0;\n    border-bottom: 2px solid;\n    margin-bottom: 20px;\n    outline: none;\n\n    color: var(--ika-purple);\n    text-align: left;\n    font: normal normal normal 30px/37px Montserrat;\n    letter-spacing: 0px;\n    color: #564F68;\n    opacity: 1;\n    \n    .switchs-container: {\n        \n        width: 40px;\n    }\n`;\n\n// Limit of items to be loaded per time\nconst LIMIT = 10;\n\nconst MessageBoardContainer = (): JSX.Element => {\n    const [csvData, setCSV] = useState([] as any);\n    const [data, setData] = useState([] as any);\n    const [offset, setOffset] = useState(0);\n    const [hasMore, setHasMore] = useState(true);\n    const [isToggledOnlyImg, setIsToggledOnlyImg] = useState(false);\n    const [isToggledTextOnly, setisToggledTextOnly] = useState(false);\n\n    useEffect(() => {\n        const fetchCSV = async () => {\n            const response = await fetch(`${process.env.PUBLIC_URL}/data/inadata.csv`);\n            const reader = response!.body!.getReader();\n            const result = await reader.read();\n            const decoder = new TextDecoder(\"utf-8\");\n            const csv = await decoder.decode(result.value);\n            const { data: csvData } = readString(csv, { header: true });\n            setCSV(csvData);\n\n            const rows = csvData.slice(offset, LIMIT);\n\n            // const promises = [] as any;\n            // await Promise.all(promises);\n\n            setData(rows);\n            setOffset(LIMIT + offset);\n        }\n        fetchCSV();\n    }, []);\n\n    const fetchMore = async () => {\n        if (data.length !== 0) {\n            const rows = csvData.slice(offset, LIMIT + offset);\n            if (rows.length === 0) {\n                setHasMore(false);\n            }\n            // const promises = [] as any;\n            // await Promise.all(promises);\n\n            setData(data.concat(rows));\n            setOffset(LIMIT + offset);\n        }\n    };\n\n    const handleFilter = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value != '') {\n            const resultData = csvData.filter((row: Submission) => {\n                return row.user.toLowerCase().includes(event.target.value.toLowerCase()) ||\n                    row.message.toLowerCase().includes(event.target.value.toLowerCase())\n            });\n            setHasMore(false);\n            setData((resultData));\n            setOffset(0);\n        } else {\n            const rows = csvData.slice(offset, LIMIT);\n            setHasMore(true);\n            setData(rows);\n            setOffset(offset + LIMIT);\n        }\n    };\n\n    const OnlyImgToggle = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            setIsToggledOnlyImg(true);\n            setisToggledTextOnly(false);\n        } else {\n            setIsToggledOnlyImg(false);\n        }\n    }\n\n    const OnlyTextToggle = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            setisToggledTextOnly(true);\n            setIsToggledOnlyImg(false);\n        } else {\n            setisToggledTextOnly(false);\n        }\n    }\n\n\n    return (\n        <MessageBoard>\n            <FiltersContainer>\n                <SearchBar\n                    onChange={handleFilter}\n                    placeholder=\"Search...\"\n                />\n\n                <MessageBoardSwitch\n                    id=\"image-switch\"\n                    label={'Only Images'}\n                    toggled={isToggledOnlyImg}\n                    onChange={OnlyImgToggle}\n                />\n                <MessageBoardSwitch\n                    id=\"text-switch\"\n                    label={'Only messages'}\n                    toggled={isToggledTextOnly}\n                    onChange={OnlyTextToggle}\n                />\n            </FiltersContainer>\n            <InfiniteScroll\n                style={{ overflow: \"hidden\" }}\n                scrollThreshold={\"90%\"}\n                dataLength={data.length}\n                next={fetchMore}\n                hasMore={hasMore}\n                loader={\n                    <Loader>\n                        <TakoLoading />\n                    </Loader>\n                }\n            >\n                <TakoMessages\n                    submissions={data}\n                    isToggledOnlyImg={isToggledOnlyImg}\n                    isToggledTextOnly={isToggledTextOnly}\n                />\n            </InfiniteScroll>\n            {/* <MessageBoard\n                data={data}\n                fetchMore={fetchMore}\n                hasMore={hasMore}\n                isToggledOnlyImg={isToggledOnlyImg}\n            ></MessageBoard> */}\n        </MessageBoard>\n    );\n};\n\n\nexport default MessageBoardContainer;","import React, { useLayoutEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// import videoUrl from \"./InaHoodie.mov\";\n\nconst LogoContainer = styled.div`\n    // background: transparent linear-gradient(180deg, #F29A31 0%, #F29C35EF 5%, #F6B76C00 86%, #FFFFFF0A 100%) 0% 0% no-repeat padding-box;\n    text-align: center;\n    height: 100vh;\n`;\nconst Logo = styled.img`\n    opacity: 1;\n    width: 600px;\n    margin-left:auto;\n    margin-right:auto;\n`;\n\nconst Pattern = styled.div`\n    \n    height: 100%;\n    opacity: 0.6;\n`;\n\nconst LogoHeader = styled.h1`\n    color: var(--ika-purple);\n    text-align: center;\n    font: normal normal bold 84px/102px Montserrat;\n    letter-spacing: 4.2px;\n    color: #564F68;\n    text-transform: uppercase;\n    opacity: 1;\n    position: relative;\n`;\n\nconst QuoteContainer = styled.div`\n    background: transparent linear-gradient(180deg, #C4BDD2 0%, #D3CCE1 100%) 0% 0% no-repeat padding-box;\n    text-align: center;\n`;\n\nconst QuoteInaImg = styled.img`\n    margin: 20px 20px 20px 20px;\n    display: inline-block;\n    width: 300px;\n`;\n\nconst Quote = styled.div`\n    text-align: left;\n    font: normal normal normal 40px/51px Roboto;\n    letter-spacing: 2.5px;\n    color: #FFFFFF;\n    display: inline-block;\n    margin-left: 40px;\n`;\n\nconst LoreContainer = styled.div`\n    \n    text-align: center;\n`;\n\nconst LoreTextContainer = styled.div`\n    z-index: 1;\n    position: absolute;\n    left: 190px;\n\n    .lore-text {\n\n        padding: 2px 25px;\n        margin-top: 60px;\n        width: 600px;\n        background: #564F68 0% 0% no-repeat padding-box;\n        border-radius: 32px;\n        opacity: 1;\n\n        color: var(--unnamed-color-f3edff);\n        text-align: left;\n        font: normal normal 300 28px/37px Mulish;\n        letter-spacing: 0px;\n        color: #F3EDFF;\n    }\n    \n    .bio-button {\n\n        background: var(--inai-purple) 0% 0% no-repeat padding-box;\n        background: #A198B3 0% 0% no-repeat padding-box;\n        border: 0px;\n        border-radius: 32px;\n        opacity: 1;\n        text-align: left;\n        font: normal normal bold 40px/61px Roboto;\n        letter-spacing: 2.5px;\n        color: #FFFFFF;\n        opacity: 1;\n\n        padding: 10px 40px;\n        margin: 10px;\n    }\n\n`;\n\nconst InaVideo = styled.video`\n    width: 100%;\n    height: 100%;\n    margin-left: 35%;\n`;\n\nconst InaVideoContainer = styled.div`\n    display: inline-block;\n    overflow: hidden;\n`;\n\nconst HomeContent = (): JSX.Element => {\n    \n    // useLayoutEffect(() => {\n    //     window.scrollTo(0, 0)\n    // });\n    \n\n    return (\n        <div>\n            <LogoContainer>\n                <Logo\n                    alt=\"ina-logo\"\n                    src={`${process.env.PUBLIC_URL}/InaLogo.png`}\n                />\n                {/* <Pattern/> */}\n                <LogoHeader>ANNIVERSARY FAN PROJECT</LogoHeader>\n            </LogoContainer>\n            <QuoteContainer>\n                <QuoteInaImg\n                    src={`${process.env.PUBLIC_URL}/InaInaIna.png`}\n                />\n                <Quote>\n                    <img \n                        alt=\"WAH\"\n                        src={`${process.env.PUBLIC_URL}/WAH.png`} \n                        style={\n                            {\n                                borderBottom: \"solid 3px\" ,\n                                paddingBottom: \"40px\",\n                                width: \"300px\"\n                            }\n                        }\n                    />\n                    <br />\n                    Ninomae Ina&apos;nis\n                    <br />\n                    2020 09 13\n                </Quote>\n            </QuoteContainer>\n            <LoreContainer>\n                <LoreTextContainer>\n                    <div className=\"lore-text\">\n                        <p>\n                            One day, Ina&apos;nis picked up a strange book and then started to gain the power of controlling tentacles.\n                            To her, tentacles are just a part in her ordinary life; it has never been a big deal for her.\n                            However, her girly mind does want to get them dressed up and stay pretty.\n                        </p>\n                        <p>\n                            After gaining power, she started hearing Ancient Whispers and Revelations.\n                            Hence, she began her VTuber activities to deliver random sanity checks on humanity, as an ordinary girl.\n                        </p>\n                    </div>\n                    <div style={{marginTop: \"50px\"}}>\n                        <Link to=\"/messages\" role=\"button\" className=\"bio-button\" >\n                            Messages\n                        </Link>\n                        <Link to=\"/timeline\" role=\"button\" className=\"bio-button\" >\n                            Timeline\n                        </Link>\n                    </div>\n                </LoreTextContainer>\n\n                <InaVideoContainer>\n                    <InaVideo autoPlay loop poster={`${process.env.PUBLIC_URL}/InaHoodie.png`}>\n                        {/* <source src={videoUrl} type=\"video/mov\" /> */}\n                        {/* <source src={videoUrl} type=\"video/webm\" /> */}\n                        {/* <source src={videoUrl} type=\"video/ogg\" /> */}\n                    </InaVideo>\n                </InaVideoContainer>\n            </LoreContainer>\n        </div>\n    )\n\n}\n\nexport default HomeContent;","import React, { useLayoutEffect } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { Milestone } from \"./components/Timeline/Milestone\";\nimport MessageBoardContainer from \"./components/Messages/MessageBoardContainer\";\nimport styled from \"styled-components\";\nimport HomeContent from \"./components/Main/HomeContent\";\n\nconst Footer = styled.footer`\n\n  background: #FBA147 0% 0% no-repeat padding-box;\n  opacity: 1;\n\n  \n\n  .footer-img{\n    \n    margin: auto;\n  }\n\n`;\n\nconst App = (): JSX.Element => (\n  <HashRouter>\n    <div className=\"App\">\n      {/* <nav className=\"Header\">\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        <NavLink to=\"/messages\">Messages</NavLink>\n        <NavLink to=\"/timeline\">Timeline</NavLink>\n      </nav> */}\n\n      <div className=\"Content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/messages\">\n            <MessageBoardContainer />\n          </Route>\n          <Route path=\"/timeline\">\n            <Timeline milestones={milestones} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n    <Footer>\n      <img \n        alt=\"mini-ina\" \n        className=\"footer-img\"\n        src={`${process.env.PUBLIC_URL}/MiniIna.png`}\n      />\n    </Footer>\n  </HashRouter>\n);\n\nconst Home = () => (\n  <div>\n    <HomeContent></HomeContent>\n  </div>\n);\n\n// const Messages = () => (\n//   <div>\n//     <h2>Messages</h2>\n//   </div>\n// );\n\nconst milestones: Milestone[] = [\n  {\n    label: \"debut\",\n    media: \"https://via.placeholder.com/1920x1080/0F0\",\n  },\n  {\n    label: \"1\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"2\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"3\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"4\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"5\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"6\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n];\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}