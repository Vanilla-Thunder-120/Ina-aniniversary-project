{"version":3,"sources":["components/Timeline/SeekerBar.tsx","components/Timeline/Timeline.tsx","components/Messages/TakoIcon.tsx","components/Messages/TakoMessages.tsx","components/TakoLoading/TakoLoading.tsx","components/Messages/MessageBoardSwitch.tsx","components/Messages/MessageBoardContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SeekerBar","milestones","curIndex","setIndex","length","nodeMapRef","useRef","map","createRef","NodeContainer","index","label","ref","current","active","passed","position","offsetLeft","Progress","BarContainer","ProgressBar","progress","styled","div","SeekerNode","React","forwardRef","props","StyledNode","onClick","Present","event","MilestoneDisplay","media","Future","setActive","MilestonePreview","preview","Past","TimelineContainer","Timeline","timelineRef","useState","cur","setCur","isFirst","isLast","trackScroll","e","yOffset","deltaY","scrollProgress","Math","max","min","floor","useEffect","throttledScroll","throttle","window","addEventListener","removeEventListener","TakoImg","img","TakoIcon","id","alt","src","process","SubmissionContainer","TextBubbleContainer","BubbleHeader","BubbleMessage","BubbleImage","TakoMessages","submissions","isToggledOnlyImg","isToggledTextOnly","filter","sub","image","options","gutter","columnWidth","fitWidth","transitionDuration","style","margin","i","message","user","icon","TakoLoadingAnimation","TakoLoading","SwitchContainer","SwitchInput","input","SwitchLabel","SwitchButton","span","SwitchTextLabel","MessageBoardSwitch","toggled","onChange","className","type","checked","htmlFor","MessageBoard","FiltersContainer","Loader","SearchBar","LIMIT","MessageBoardContainer","csvData","setCSV","data","setData","offset","setOffset","hasMore","setHasMore","setIsToggledOnlyImg","setisToggledTextOnly","a","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","decode","value","csv","readString","header","rows","slice","fetchCSV","fetchMore","concat","handleFilter","target","resultData","row","toLowerCase","includes","OnlyImgToggle","OnlyTextToggle","placeholder","overflow","scrollThreshold","dataLength","next","loader","Home","App","exact","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAyBaA,EAAY,SAAC,GAIkB,IAAD,IAHzCC,EAGyC,EAHzCA,WACAC,EAEyC,EAFzCA,SACAC,EACyC,EADzCA,SAEA,IAAKF,EAAWG,OAAQ,OAAO,KAC/B,IAAMC,EAAaC,iBACjBL,EAAWM,KAAI,kBAAMC,0BAGvB,OACE,eAACC,EAAD,WACGR,EAAWM,KAAI,WAAYG,GAAZ,IAAGC,EAAH,EAAGA,MAAH,OACd,cAAC,EAAD,CAEEA,MAAOA,EACPC,IAAKP,EAAWQ,QAAQH,GACxBI,OAAQJ,IAAUR,EAClBa,OAAQL,EAAQR,EAChBC,SAAU,kBAAMA,EAASO,KALpBA,MAQT,cAAC,EAAD,CACEM,SAAQ,oBAAEX,EAAWQ,QAAQX,GAAUW,eAA/B,aAAE,EAAsCI,kBAAxC,QAAsD,QAMhEC,EAAW,SAAC,GAAwC,IAAtCF,EAAqC,EAArCA,SAClB,OACE,cAACG,EAAD,UACE,cAACC,EAAD,CAAaC,SAAUL,OAKvBG,EAAeG,IAAOC,IAAV,uIASZH,EAAcE,IAAOC,IAAV,+HACN,qBAAGF,YAMRG,EAAaC,IAAMC,YACvB,WAEEd,GACC,IAFCT,EAEF,EAFEA,SAAawB,EAEf,iBACA,OACE,cAACC,EAAD,2BAAgBD,GAAhB,IAAuBE,QAAS1B,EAAUS,IAAKA,QAO/CgB,EAAaN,IAAOC,IAAV,2MAGV,gBAAGT,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACAD,EAAS,UAAYC,EAAS,UAAY,aAS1CN,EAAgBa,IAAOC,IAAV,yN,QC/BnB,SAASO,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,MACjB,OACE,cAACC,EAAD,CAAkBC,MAAOF,EAAME,MAA/B,SACE,+BAAOF,EAAMpB,UAKnB,SAASuB,EAAT,GAMI,IALFD,EAKC,EALDA,MACAE,EAIC,EAJDA,UAKA,OAAO,cAACC,EAAD,CAAkBC,QAASJ,EAAOJ,QAASM,IAGpD,SAASG,EAAT,GAMI,IALFL,EAKC,EALDA,MACAE,EAIC,EAJDA,UAKA,OAAO,cAACC,EAAD,CAAkBC,QAASJ,EAAOJ,QAASM,IAGpD,I,gCAAMI,EAAoBjB,IAAOC,IAAV,kFAMjBS,EAAmBV,IAAOC,IAAV,0EACF,SAACI,GAAD,OAAWA,EAAMM,SAI/BG,EAAmBd,IAAOC,IAAV,wEACF,SAACI,GAAD,OAAWA,EAAMU,WAItBG,EA/GE,SAAC,GAA8D,IAA5DvC,EAA2D,EAA3DA,WAEZwC,EAAcnC,iBAAO,GAE3B,EAAsBoC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAkB,IAARF,EACVG,EAASH,IAAQ1C,EAAWG,OAAS,EAKrC2C,EAAc,SAACC,GACnB,IAAgBC,EAAYD,EAApBE,OACJC,EAAiBV,EAAY5B,QAEjCsC,GAAmBF,EAAU,IAPR,GAQrBE,EAAiBC,KAAKC,IAAI,EAAGF,GAC7BA,EAAiBC,KAAKE,IAAIH,EAA0C,KAAzBlD,EAAWG,OAAS,IAE3DgD,KAAKG,MAAMJ,EAAiB,OAASR,GAAQQ,GAC/CP,EAAOQ,KAAKG,MAAMJ,EAAiB,MAErCV,EAAY5B,QAAUsC,GAGlBhD,EAAW,SAACO,GAChB+B,EAAY5B,QAAkB,IAARH,EACtBkC,EAAOlC,IAaT,OAVA8C,qBAAU,WACR,IAAMC,EAAkBC,mBAASX,EAAa,IAI9C,OAFAY,OAAOC,iBAAiB,aAAcH,GAE/B,WACLE,OAAOE,oBAAoB,aAAcJ,MAE1C,IAGD,qCACE,eAAClB,EAAD,YACIM,GACA,cAACP,EAAD,CACEL,MAAOhC,EAAW0C,EAAM,GAAGV,MAC3BE,UAAW,kBAAMhC,EAASwC,EAAM,MAGpC,cAACb,EAAD,CAASC,MAAO9B,EAAW0C,MACzBG,GACA,cAACZ,EAAD,CACED,MAAOhC,EAAW0C,EAAM,GAAGV,MAC3BE,UAAW,kBAAMhC,EAASwC,EAAM,SAItC,cAAC,EAAD,CACE1C,WAAYA,EACZC,SAAUyC,EACVxC,SAAUA,EACVkB,SAAUoB,EAAY5B,c,2DChExBiD,GAAUxC,IAAOyC,IAAV,4IAaAC,GAAW,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAEvB,OAEQ,cAACH,GAAD,CACII,IAAG,oBAAeD,GAClBE,IAAG,UAAKC,4BAAL,kBAAqCH,EAArC,WChBbI,GAAsB/C,IAAOC,IAAV,6KAUnB+C,GAAsBhD,IAAOC,IAAV,iTA4BnBgD,GAAejD,IAAOC,IAAV,sMASZiD,GAAgBlD,IAAOC,IAAV,mOAUbkD,GAAcnD,IAAOyC,IAAV,kOA6DFW,GA7CM,SAAC,GAAwF,IAAvFC,EAAsF,EAAtFA,YAAaC,EAAyE,EAAzEA,iBAAkBC,EAAuD,EAAvDA,kBASlD,OAPGD,IACCD,EAAcA,EAAYG,QAAO,SAACC,GAC9B,OAAOA,EAAIC,UAMf,cAAC,KAAD,CACIC,QAAS,CACLC,OAAQ,GACRC,YAAa,EACbC,UAAU,EACVC,mBAAoB,GAExBC,MAAO,CAAEC,OAAQ,UAPrB,SAUQZ,EAAYpE,KAAI,WAAiCiF,GAAjC,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAMX,EAAxB,EAAwBA,MAAxB,OACZ,cAACX,GAAD,UACI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,cAAC,GAAD,CAAUN,GAAI0B,IACL,IAARD,EAAaA,EAAO,iBAFzB,OAIA,wBACEb,GAAqBG,GAEnB,cAACP,GAAD,CAAaN,IAAI,mFAEnBS,GACE,cAACJ,GAAD,UAAgBiB,QAZFD,S,UCjGxCI,GAAuBtE,IAAOyC,IAAV,+CAIb8B,GAAc,WAEvB,OAEQ,cAACD,GAAD,CACI1B,IAAG,mBACHC,IAAG,UAAKC,4BAAL,6BCTb0B,GAAkBxE,IAAOC,IAAV,uGAMfwE,GAAczE,IAAO0E,MAAV,8EAMXC,GAAc3E,IAAOX,MAAV,+QAaXuF,GAAe5E,IAAO6E,KAAV,0XAWdJ,GAAyBE,GAKzBA,IAKEG,GAAkB9E,IAAOC,IAAV,0MAwCN8E,GAvBY,SAAC,GAAgE,IAA9DpC,EAA6D,EAA7DA,GAAItD,EAAyD,EAAzDA,MAAO2F,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,SAGhD,OACE,eAACT,GAAD,WACE,cAACC,GAAD,CACES,UAAU,kBACVvC,GAAIA,EACJwC,KAAK,WACLC,QAASJ,EACTC,SAAUA,IAEZ,cAACN,GAAD,CAAaO,UAAU,eAAeG,QAAS1C,EAA/C,SACE,cAACiC,GAAD,CAAcM,UAAU,oBAE1B,cAACJ,GAAD,UACGzF,QCtEHiG,GAAetF,IAAOC,IAAV,+FAMZsF,GAAmBvF,IAAOC,IAAV,+CAIhBuF,GAASxF,IAAOC,IAAV,0IAQNwF,GAAYzF,IAAO0E,MAAV,8bAuBTgB,GAAQ,GAmICC,GAjIe,WAC1B,MAA0BvE,mBAAS,IAAnC,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAAwBzE,mBAAS,IAAjC,mBAAO0E,EAAP,KAAaC,EAAb,KACA,EAA4B3E,mBAAS,GAArC,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAA8B7E,oBAAS,GAAvC,mBAAO8E,EAAP,KAAgBC,EAAhB,KACA,EAAgD/E,oBAAS,GAAzD,mBAAOkC,EAAP,KAAyB8C,EAAzB,KACA,EAAkDhF,oBAAS,GAA3D,mBAAOmC,EAAP,KAA0B8C,EAA1B,KAEAnE,qBAAU,YACQ,yCAAG,2CAAAoE,EAAA,sEACUC,MAAM,GAAD,OAAIzD,4BAAJ,sBADf,cACP0D,EADO,OAEPC,EAASD,EAAUE,KAAMC,YAFlB,SAGQF,EAAOG,OAHf,cAGPC,EAHO,OAIPC,EAAU,IAAIC,YAAY,SAJnB,UAKKD,EAAQE,OAAOH,EAAOI,OAL3B,QAKPC,EALO,SAMaC,aAAWD,EAAK,CAAEE,QAAQ,IAAtCxB,EAND,EAMLE,KACRD,EAAOD,GAEDyB,EAAOzB,EAAQ0B,MAAMtB,EAAQN,IAKnCK,EAAQsB,GACRpB,EAAUP,GAAQM,GAfL,4CAAH,qDAiBduB,KACD,IAEH,IAAMC,EAAS,yCAAG,6BAAAlB,EAAA,sDACM,IAAhBR,EAAKhH,SAEe,KADduI,EAAOzB,EAAQ0B,MAAMtB,EAAQN,GAAQM,IAClClH,QACLqH,GAAW,GAKfJ,EAAQD,EAAK2B,OAAOJ,IACpBpB,EAAUP,GAAQM,IAVR,2CAAH,qDAcT0B,EAAY,yCAAG,WAAOjH,GAAP,kBAAA6F,EAAA,sDACS,IAAtB7F,EAAMkH,OAAOV,OACPW,EAAahC,EAAQpC,QAAO,SAACqE,GAC/B,OAAOA,EAAIzD,KAAK0D,cAAcC,SAAStH,EAAMkH,OAAOV,MAAMa,gBACtDD,EAAI1D,QAAQ2D,cAAcC,SAAStH,EAAMkH,OAAOV,MAAMa,kBAE9D3B,GAAW,GACXJ,EAAS6B,GACT3B,EAAU,KAEJoB,EAAOzB,EAAQ0B,MAAMtB,EAAQN,IACnCS,GAAW,GACXJ,EAAQsB,GACRpB,EAAUD,EAASN,KAbN,2CAAH,sDAiBZsC,EAAa,yCAAG,WAAOvH,GAAP,UAAA6F,EAAA,sDACd7F,EAAMkH,OAAOvC,SACbgB,GAAoB,GACpBC,GAAqB,IAErBD,GAAoB,GALN,2CAAH,sDASb6B,EAAc,yCAAG,WAAOxH,GAAP,UAAA6F,EAAA,sDACf7F,EAAMkH,OAAOvC,SACbiB,GAAqB,GACrBD,GAAoB,IAEpBC,GAAqB,GALN,2CAAH,sDAUpB,OACI,eAACf,GAAD,WACI,eAACC,GAAD,WACI,cAACE,GAAD,CACIR,SAAUyC,EACVQ,YAAY,cAGhB,cAAC,GAAD,CACIvF,GAAG,eACHtD,MAAO,cACP2F,QAAS1B,EACT2B,SAAU+C,IAEd,cAAC,GAAD,CACIrF,GAAG,cACHtD,MAAO,gBACP2F,QAASzB,EACT0B,SAAUgD,OAGlB,cAAC,KAAD,CACIjE,MAAO,CAAEmE,SAAU,UACnBC,gBAAiB,OACjBC,WAAYvC,EAAKhH,OACjBwJ,KAAMd,EACNtB,QAASA,EACTqC,OACI,cAAC/C,GAAD,UACI,cAAC,GAAD,MARZ,SAYI,cAAC,GAAD,CACInC,YAAayC,EACbxC,iBAAkBA,EAClBC,kBAAmBA,UCxIjCiF,GAAO,kBACX,8BACE,yCAUE7J,GAA0B,CAC9B,CACEU,MAAO,QACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,6CAET,CACEtB,MAAO,IACPsB,MAAO,8CAII8H,GAvEH,kBACV,cAAC,IAAD,UACE,sBAAKvD,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAASwD,OAAK,EAACC,GAAG,IAAlB,kBAGA,cAAC,IAAD,CAASA,GAAG,YAAZ,sBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,yBAGF,qBAAKzD,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwD,OAAK,EAACE,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,CAAUjK,WAAYA,kBCbnBkK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.4552e97b.chunk.js","sourcesContent":["import React, {\n  createRef,\n  ForwardedRef,\n  MutableRefObject,\n  RefObject,\n  useRef,\n} from \"react\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\ninterface INodeProps {\n  active: boolean;\n  passed: boolean;\n  label: string;\n  ref: MutableRefObject<HTMLInputElement>;\n  setIndex: () => void;\n}\n\ninterface ISeekerBarProps {\n  milestones: Milestone[];\n  curIndex: number;\n  setIndex: (index: number) => void;\n  progress: number;\n}\n\nexport const SeekerBar = ({\n  milestones,\n  curIndex,\n  setIndex,\n}: ISeekerBarProps): JSX.Element | null => {\n  if (!milestones.length) return null;\n  const nodeMapRef = useRef<RefObject<HTMLInputElement>[]>(\n    milestones.map(() => createRef())\n  );\n\n  return (\n    <NodeContainer>\n      {milestones.map(({ label }, index) => (\n        <SeekerNode\n          key={index}\n          label={label}\n          ref={nodeMapRef.current[index]}\n          active={index === curIndex}\n          passed={index < curIndex}\n          setIndex={() => setIndex(index)}\n        />\n      ))}\n      <Progress\n        position={nodeMapRef.current[curIndex].current?.offsetLeft ?? 0}\n      />\n    </NodeContainer>\n  );\n};\n\nconst Progress = ({ position }: { position: number }) => {\n  return (\n    <BarContainer>\n      <ProgressBar progress={position} />\n    </BarContainer>\n  );\n};\n\nconst BarContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  position: absolute;\n  z-index: 0;\n  top: 45%;\n  margin-left: 0.25em;\n`;\n\nconst ProgressBar = styled.div<{ progress: number }>`\n  width: ${({ progress }) => progress}px;\n  transition: width 0.25s linear;\n  background-color: #f29a31;\n  height: 100%;\n`;\n\nconst SeekerNode = React.forwardRef<HTMLInputElement, INodeProps>(\n  function SeekerNode(\n    { setIndex, ...props }: INodeProps,\n    ref: ForwardedRef<HTMLInputElement>\n  ) {\n    return (\n      <StyledNode {...props} onClick={setIndex} ref={ref}>\n        {/*<span>{label}</span>*/}\n      </StyledNode>\n    );\n  }\n);\n\nconst StyledNode = styled.div<{ active: boolean; passed: boolean }>`\n  background: #fff;\n  border: 0.35rem solid\n    ${({ active, passed }) =>\n      active ? \"#F29A31\" : passed ? \"#E1D9EF\" : \"#564F68\"};\n  border-radius: 50%;\n  margin: 1rem 0;\n  min-width: 0.7rem;\n  min-height: 0.7rem;\n  padding: 5px;\n  z-index: 2;\n`;\n\nconst NodeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //position: relative;\n  background: #666666;\n  padding: 0 1em;\n  position: relative;\n  overflow: hidden;\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { SeekerBar } from \"./SeekerBar\";\nimport {throttle } from \"lodash\";\nimport { Milestone } from \"./Milestone\";\nimport styled from \"styled-components\";\n\nconst Timeline = ({ milestones }: { milestones: Milestone[] }): JSX.Element => {\n  // const { events } = props;\n  const timelineRef = useRef(0);\n\n  const [cur, setCur] = useState(0);\n  const isFirst = cur === 0;\n  const isLast = cur === milestones.length - 1;\n\n  const scrollStrength = 20;\n  //Seeker progress for the milestones\n\n  const trackScroll = (e: any) => {\n    const { deltaY: yOffset } = e;\n    let scrollProgress = timelineRef.current;\n\n    scrollProgress += (yOffset / 100) * scrollStrength;\n    scrollProgress = Math.max(0, scrollProgress);\n    scrollProgress = Math.min(scrollProgress, (milestones.length - 1) * 100);\n\n    if (Math.floor(scrollProgress / 100) !== cur || !scrollProgress)\n      setCur(Math.floor(scrollProgress / 100));\n\n    timelineRef.current = scrollProgress;\n  };\n\n  const setIndex = (index: number) => {\n    timelineRef.current = index * 100;\n    setCur(index);\n  };\n\n  useEffect(() => {\n    const throttledScroll = throttle(trackScroll, 50);\n\n    window.addEventListener(\"mousewheel\", throttledScroll);\n\n    return () => {\n      window.removeEventListener(\"mousewheel\", throttledScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      <TimelineContainer>\n        {!isFirst && (\n          <Past\n            media={milestones[cur - 1].media}\n            setActive={() => setIndex(cur - 1)}\n          />\n        )}\n        <Present event={milestones[cur]} />\n        {!isLast && (\n          <Future\n            media={milestones[cur + 1].media}\n            setActive={() => setIndex(cur + 1)}\n          />\n        )}\n      </TimelineContainer>\n      <SeekerBar\n        milestones={milestones}\n        curIndex={cur}\n        setIndex={setIndex}\n        progress={timelineRef.current}\n      />\n    </>\n  );\n};\n\nfunction Present({ event }: { event: Milestone }) {\n  return (\n    <MilestoneDisplay media={event.media}>\n      <span>{event.label}</span>\n    </MilestoneDisplay>\n  );\n}\n\nfunction Future({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nfunction Past({\n  media,\n  setActive,\n}: {\n  media: Milestone[\"media\"];\n  setActive: () => void;\n}) {\n  return <MilestonePreview preview={media} onClick={setActive} />;\n}\n\nconst TimelineContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n`;\n\nconst MilestoneDisplay = styled.div<{ media: Milestone[\"media\"] }>`\n  background: url(${(props) => props.media}) center;\n\n  flex: 5;\n`;\nconst MilestonePreview = styled.div<{ preview: Milestone[\"media\"] }>`\n  background: url(${(props) => props.preview}) center;\n  flex: 1;\n`;\n\nexport default Timeline;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TakoImg = styled.img`\n    width: 80px;\n    filter: drop-shadow(2px 2px 1px darkgray);\n    opacity: 1;\n    vertical-align: bottom;\n`;\n\n\n\ninterface TakoIconProps {\n    id: number\n}\n\nexport const TakoIcon = ({ id }: TakoIconProps): JSX.Element => {\n\n    return (\n        \n            <TakoImg\n                alt={`tako-icon-${id}`}\n                src={`${process.env.PUBLIC_URL}/icon/W${id}.png`}\n            />\n        \n    )\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Submission } from \"./Submission\";\nimport Masonry from \"react-masonry-component\";\nimport { TakoIcon } from \"./TakoIcon\";\n\nconst SubmissionContainer = styled.div`\n    margin :10px;\n    width: 450px;\n    @media only screen and (max-width: 768px) {\n        margin-left: 0px;\n        width: 100%;\n    }\n\n`;\n\nconst TextBubbleContainer = styled.div`\n  position: relative;\n  font-family: sans-serif;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 15px;\n  border: 3px solid var(--inai-purple);\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  border: 3px solid #A198B3;\n  border-radius: 15px;\n  opacity: 1;\n  \n`;\n\n// const TextBubbleBottom = styled.div`\n//     content: \"\";\n//     width: 0px;\n//     height: 0px;\n//     position: absolute;\n//     border-left: 24px solid #fff;\n//     border-right: 12px solid transparent;\n//     border-top: 12px solid #fff;\n//     border-bottom: 20px solid transparent;\n//     left: 50%;\n//     bottom: -17px;\n//     // border-color: purple;\n// `;\n\nconst BubbleHeader = styled.div`\n    display: inline;\n    color: var(--ina-orange);\n    text-align: left;\n    font: normal normal 600 37px/45px Montserrat;\n    letter-spacing: 0px;\n    opacity: 1;\n`;\n\nconst BubbleMessage = styled.div`\n    padding-top: 5px;\n    overflow-wrap: break-word;\n    color: var(--ika-purple);\n    text-align: left;\n    font: normal normal 300 20px/25px Mulish;\n    letter-spacing: 0px;\n    opacity: 1;\n`;\n\nconst BubbleImage = styled.img`\n    border: 2px solid var(--inai-purple);\n    border: 2px solid #A198B3;\n    border-radius: 23px;\n    opacity: 1;  \n    @media only screen and (max-width: 768px) {\n        width: 100%;\n    }\n`;\n\ninterface TakoMessagesProps {\n    submissions: Submission[];\n    isToggledOnlyImg: boolean;\n    isToggledTextOnly: boolean;\n}\n\nconst TakoMessages = ({submissions, isToggledOnlyImg, isToggledTextOnly}: TakoMessagesProps): JSX.Element => {\n    \n    if(isToggledOnlyImg){\n        submissions = submissions.filter((sub) => {\n            return sub.image;\n        })\n    }\n\n    \n    return (\n        <Masonry\n            options={{\n                gutter: 40,\n                columnWidth: 1,\n                fitWidth: true,\n                transitionDuration: 0,\n            }}\n            style={{ margin: \"0 auto\" }}\n        >\n            {\n                submissions.map(({ message, user, icon, image }, i) => (\n                    <SubmissionContainer key={i}>\n                        <TextBubbleContainer>\n                            <BubbleHeader>\n                                <TakoIcon id={icon} />\n                                {user != '' ? user : 'Anonymous Tako'}:\n                            </BubbleHeader>\n                            <hr />\n                            {!isToggledTextOnly && image && (\n                                //Using ina pfp as placeholder.\n                                <BubbleImage src=\"https://pbs.twimg.com/profile_images/1339283318848716801/_zU72OLZ_400x400.jpg\" />\n                            )}\n                            {!isToggledOnlyImg && (\n                                <BubbleMessage>{message}</BubbleMessage>                                \n                            )}\n                            {/* <TextBubbleBottom/> */}\n                        </TextBubbleContainer>\n                    </SubmissionContainer>\n                ))\n            }\n        </Masonry>\n    );\n\n};\n\nexport default TakoMessages;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TakoLoadingAnimation = styled.img`\n    width: 150px;\n`;\n\nexport const TakoLoading = (): JSX.Element => {\n\n    return (\n        \n            <TakoLoadingAnimation\n                alt={`tako-loading-gif`}\n                src={`${process.env.PUBLIC_URL}/takoJiggleProject.gif`}\n            />\n        \n    )\n};","import React, { ChangeEventHandler } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst SwitchContainer = styled.div`\n    display: inline-box;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nconst SwitchInput = styled.input`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n`;\n\nconst SwitchLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 50px;\n  height: 30px;\n  border-radius: 100px;\n  border: 2px solid gray;\n  position: relative;\n  transition: background-color 0.2s;\n`;\n\nconst SwitchButton = styled.span`\n  content: \"\";\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 25px;\n  height: 26px;\n  border-radius: 45px;\n  transition: 0.2s;\n  background: grey;\n  box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n  ${SwitchInput}:checked + ${SwitchLabel} & {\n    left: calc(100% - 2px);\n    transform: translateX(-100%);\n  }\n\n  ${SwitchLabel}:active & {\n    width: 45px;\n  }\n`;\n\nconst SwitchTextLabel = styled.div`\n  color: var(--ika-purple);\n  font: normal normal 300 25px/30px Montserrat;\n  letter-spacing: 0px;\n  color: #564F68;\n  opacity: 1;\n  margin: auto;\n  margin-left: 5px;\n`;\n\ninterface SwitchProps {\n  id: string;\n  label: string;\n  toggled: boolean;\n  onChange: ChangeEventHandler;\n}\n\nconst MessageBoardSwitch = ({ id, label, toggled, onChange }: SwitchProps): JSX.Element => {\n\n\n  return (\n    <SwitchContainer>\n      <SwitchInput\n        className=\"switch-checkbox\"\n        id={id}\n        type=\"checkbox\"\n        checked={toggled}\n        onChange={onChange}\n      />\n      <SwitchLabel className=\"switch-label\" htmlFor={id}>\n        <SwitchButton className=\"switch-button\" />\n      </SwitchLabel>\n      <SwitchTextLabel>\n        {label}\n      </SwitchTextLabel>\n    </SwitchContainer>\n\n  );\n};\n\nexport default MessageBoardSwitch;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { readString } from \"react-papaparse\";\n\nimport TakoMessages from \"./TakoMessages\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { TakoLoading } from \"../TakoLoading/TakoLoading\";\nimport MessageBoardSwitch from \"./MessageBoardSwitch\";\nimport { Submission } from \"./Submission\";\n// import MessageBoard from \"./MessageBoard\";\n\n\nconst MessageBoard = styled.div` \n    width: 90%;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nconst FiltersContainer = styled.div`\n    margin: auto;\n`;\n\nconst Loader = styled.div`\n    display: flex !important;\n    justify-content: center;\n    align-items: center;\n    margin-top: 40px;\n`;\n\n\nconst SearchBar = styled.input`\n    display: block;    \n    width: 100%;\n    background-color: transparent;\n    border: 0;\n    border-bottom: 2px solid;\n    margin-bottom: 20px;\n    outline: none;\n\n    color: var(--ika-purple);\n    text-align: left;\n    font: normal normal normal 30px/37px Montserrat;\n    letter-spacing: 0px;\n    color: #564F68;\n    opacity: 1;\n    \n    .switchs-container: {\n        \n        width: 40px;\n    }\n`;\n\n// Limit of items to be loaded per time\nconst LIMIT = 10;\n\nconst MessageBoardContainer = (): JSX.Element => {\n    const [csvData, setCSV] = useState([] as any);\n    const [data, setData] = useState([] as any);\n    const [offset, setOffset] = useState(0);\n    const [hasMore, setHasMore] = useState(true);\n    const [isToggledOnlyImg, setIsToggledOnlyImg] = useState(false);\n    const [isToggledTextOnly, setisToggledTextOnly] = useState(false);\n\n    useEffect(() => {\n        const fetchCSV = async () => {\n            const response = await fetch(`${process.env.PUBLIC_URL}/data/inadata.csv`);\n            const reader = response!.body!.getReader();\n            const result = await reader.read();\n            const decoder = new TextDecoder(\"utf-8\");\n            const csv = await decoder.decode(result.value);\n            const { data: csvData } = readString(csv, { header: true });\n            setCSV(csvData);\n\n            const rows = csvData.slice(offset, LIMIT);\n\n            // const promises = [] as any;\n            // await Promise.all(promises);\n\n            setData(rows);\n            setOffset(LIMIT + offset);\n        }\n        fetchCSV();\n    }, []);\n\n    const fetchMore = async () => {\n        if (data.length !== 0) {\n            const rows = csvData.slice(offset, LIMIT + offset);\n            if (rows.length === 0) {\n                setHasMore(false);\n            }\n            // const promises = [] as any;\n            // await Promise.all(promises);\n\n            setData(data.concat(rows));\n            setOffset(LIMIT + offset);\n        }\n    };\n\n    const handleFilter = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value != '') {\n            const resultData = csvData.filter((row: Submission) => {\n                return row.user.toLowerCase().includes(event.target.value.toLowerCase()) ||\n                    row.message.toLowerCase().includes(event.target.value.toLowerCase())\n            });\n            setHasMore(false);\n            setData((resultData));\n            setOffset(0);\n        } else {\n            const rows = csvData.slice(offset, LIMIT);\n            setHasMore(true);\n            setData(rows);\n            setOffset(offset + LIMIT);\n        }\n    };\n\n    const OnlyImgToggle = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            setIsToggledOnlyImg(true);\n            setisToggledTextOnly(false);\n        } else {\n            setIsToggledOnlyImg(false);\n        }\n    }\n\n    const OnlyTextToggle = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            setisToggledTextOnly(true);\n            setIsToggledOnlyImg(false);\n        } else {\n            setisToggledTextOnly(false);\n        }\n    }\n\n\n    return (\n        <MessageBoard>\n            <FiltersContainer>\n                <SearchBar\n                    onChange={handleFilter}\n                    placeholder=\"Search...\"\n                />\n\n                <MessageBoardSwitch\n                    id=\"image-switch\"\n                    label={'Only Images'}\n                    toggled={isToggledOnlyImg}\n                    onChange={OnlyImgToggle}\n                />\n                <MessageBoardSwitch\n                    id=\"text-switch\"\n                    label={'Only messages'}\n                    toggled={isToggledTextOnly}\n                    onChange={OnlyTextToggle}\n                />\n            </FiltersContainer>\n            <InfiniteScroll\n                style={{ overflow: \"hidden\" }}\n                scrollThreshold={\"100%\"}\n                dataLength={data.length}\n                next={fetchMore}\n                hasMore={hasMore}\n                loader={\n                    <Loader>\n                        <TakoLoading />\n                    </Loader>\n                }\n            >\n                <TakoMessages\n                    submissions={data}\n                    isToggledOnlyImg={isToggledOnlyImg}\n                    isToggledTextOnly={isToggledTextOnly}\n                />\n            </InfiniteScroll>\n            {/* <MessageBoard\n                data={data}\n                fetchMore={fetchMore}\n                hasMore={hasMore}\n                isToggledOnlyImg={isToggledOnlyImg}\n            ></MessageBoard> */}\n        </MessageBoard>\n    );\n};\n\n\nexport default MessageBoardContainer;","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { Milestone } from \"./components/Timeline/Milestone\";\nimport MessageBoardContainer from \"./components/Messages/MessageBoardContainer\";\n\nconst App = (): JSX.Element => (\n  <HashRouter>\n    <div className=\"App\">\n      <nav className=\"Header\">\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        <NavLink to=\"/messages\">Messages</NavLink>\n        <NavLink to=\"/timeline\">Timeline</NavLink>\n      </nav>\n\n      <div className=\"Content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/messages\">\n            <MessageBoardContainer  />\n          </Route>\n          <Route path=\"/timeline\">\n            <Timeline milestones={milestones} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  </HashRouter>\n);\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n  </div>\n);\n\n// const Messages = () => (\n//   <div>\n//     <h2>Messages</h2>\n//   </div>\n// );\n\nconst milestones: Milestone[] = [\n  {\n    label: \"debut\",\n    media: \"https://via.placeholder.com/1920x1080/0F0\",\n  },\n  {\n    label: \"1\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"2\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"3\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"4\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n  {\n    label: \"5\",\n    media: \"https://via.placeholder.com/1920x1080/F00\",\n  },\n  {\n    label: \"6\",\n    media: \"https://via.placeholder.com/1920x1080/00F\",\n  },\n];\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}